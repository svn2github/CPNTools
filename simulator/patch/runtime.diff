diff -ur runtime/c-libs/c-libraries.c /Users/michael/sml/base/runtime/c-libs/c-libraries.c
--- runtime/c-libs/c-libraries.c	2013-03-07 15:48:20.000000000 +0400
+++ /Users/michael/sml/base/runtime/c-libs/c-libraries.c	2013-03-07 15:50:52.000000000 +0400
@@ -15,6 +15,7 @@
 #include "c-library.h"
 #include "c-globals-tbl.h"
 #include <stdio.h>
+#include <string.h>
 
 #define C_LIBRARY(lib)  extern c_library_t lib;
 #include "clib-list.h"
Only in /Users/michael/sml/base/runtime/c-libs: c-libraries.c.orig
diff -ur runtime/c-libs/smlnj-runtime/cfun-list.h /Users/michael/sml/base/runtime/c-libs/smlnj-runtime/cfun-list.h
--- runtime/c-libs/smlnj-runtime/cfun-list.h	2013-03-07 15:48:23.000000000 +0400
+++ /Users/michael/sml/base/runtime/c-libs/smlnj-runtime/cfun-list.h	2013-03-07 15:50:52.000000000 +0400
@@ -22,6 +22,8 @@
 CFUNC("exportHeap",	_ml_RunT_export_heap,	"string -> bool")
 CFUNC("exportFn",	_ml_RunT_export_fun,	"(string * (string list -> unit)) -> unit")
 CFUNC("gcControl",	_ml_RunT_gc_ctl,	"(string * int ref) list -> unit")
+CFUNC("getMemory",	_ml_RunT_get_heap_size,	"unit -> int")
+CFUNC("getPageFaults",	_ml_RunT_get_page_faults,	"unit -> int")
 CFUNC("intervalTick",	_ml_RunT_itick,		"unit -> (int * int)")
 CFUNC("allocCode",	_ml_RunT_alloc_code,	"")
 CFUNC("mkExec",		_ml_RunT_mkexec,	"Word8Vector * int -> object -> object")
Only in /Users/michael/sml/base/runtime/c-libs/smlnj-runtime: cfun-list.h.orig
diff -ur runtime/c-libs/smlnj-runtime/gc-ctl.c /Users/michael/sml/base/runtime/c-libs/smlnj-runtime/gc-ctl.c
--- runtime/c-libs/smlnj-runtime/gc-ctl.c	2013-03-07 15:48:23.000000000 +0400
+++ /Users/michael/sml/base/runtime/c-libs/smlnj-runtime/gc-ctl.c	2013-03-07 15:50:52.000000000 +0400
@@ -5,6 +5,7 @@
  * General interface for GC control functions.
  */
 
+#include "ml-osdep.h"
 #include "ml-base.h"
 #include <string.h>
 #include "ml-values.h"
@@ -13,6 +14,9 @@
 #include "heap.h"
 #include "ml-objects.h"
 #include "cfun-proto-list.h"
+#include <stdio.h>
+#include <sys/time.h>
+#include <sys/resource.h>
 
 #define STREQ(s1, s2)	(strcmp((s1), STR_MLtoC(s2)) == 0)
 
@@ -66,6 +70,40 @@
 
 } /* end of _ml_RunT_gc_ctl */
 
+ml_val_t _ml_RunT_get_page_faults (ml_state_t *msp, ml_val_t arg)
+{
+	struct rusage ru;
+	getrusage(RUSAGE_SELF, &ru);
+	return INT_CtoML(ru.ru_minflt);
+}
+
+
+
+ml_val_t _ml_RunT_get_heap_size (ml_state_t *msp, ml_val_t arg)
+{
+	heap_t *heap = msp->ml_heap;
+	Addr_t bytes;
+	int i, j;
+
+	bytes = ((Addr_t)(msp->ml_allocPtr) - (Addr_t)(heap->allocBase));
+	for (i = 0;  i < heap->numGens;  i++) {
+		for (j = 0;  j < NUM_ARENAS;  j++) {
+			arena_t	*ap = heap->gen[i]->arena[j];
+			if (isACTIVE(ap))
+			bytes += ((Addr_t)(ap->nextw) - (Addr_t)(ap->tospBase));
+		}
+		/* count code objects too! */
+		for (j = 0;  j < NUM_BIGOBJ_KINDS;  j++) {
+			bigobj_desc_t   *dp = heap->gen[i]->bigObjs[j];
+			for (; dp != NIL(bigobj_desc_t *);  dp = dp->next) {
+				bytes += dp->sizeB;
+			}
+		}
+	}
+
+	return INT_CtoML(bytes);
+}
+
 
 /* SetVMCache:
  *
Only in /Users/michael/sml/base/runtime/c-libs/smlnj-runtime: gc-ctl.c.orig
diff -ur runtime/c-libs/unix-raise-syserr.c /Users/michael/sml/base/runtime/c-libs/unix-raise-syserr.c
--- runtime/c-libs/unix-raise-syserr.c	2013-03-07 15:48:24.000000000 +0400
+++ /Users/michael/sml/base/runtime/c-libs/unix-raise-syserr.c	2013-03-07 15:50:52.000000000 +0400
@@ -15,25 +15,6 @@
 #include "ml-globals.h"
 #include "ml-c.h"
 
-
-#ifndef HAS_STRERROR
-/* strerror:
- * An implementation of strerror for those systems that do not provide it.
- */
-PVT char *strerror (int errnum)
-{
-    extern int	sys_nerr;
-    extern char	*sys_errlist[];
-
-    if ((errnum < 0) || (sys_nerr <= errnum))
-	return "<unknown system error>";
-    else
-	return sys_errlist[errnum];
-
-} /* end of strerror */
-#endif
-
-
 /* RaiseSysError:
  *
  * Raise the ML exception SysErr, which has the spec:
diff -ur runtime/config/gen-sizes.c /Users/michael/sml/base/runtime/config/gen-sizes.c
--- runtime/config/gen-sizes.c	2013-03-07 15:48:25.000000000 +0400
+++ /Users/michael/sml/base/runtime/config/gen-sizes.c	2013-03-07 15:50:52.000000000 +0400
@@ -24,7 +24,7 @@
     unsigned long   l;
 } U;
 
-int log2 (int x)
+int sml_log2 (int x)
 {
     int		i, j;
 
@@ -33,7 +33,7 @@
 
     return i-1;
 
-} /* end of log2 */
+} /* end of sml_log2 */
 
 int main (void)
 {
@@ -84,8 +84,8 @@
     fprintf (f, "#define ADDR_SZB           %d\n", (int)ADDR_SZB);
     fprintf (f, "#define REALD_SZB          %d\n", (int)sizeof(double));
     fprintf (f, "#define BITS_PER_WORD      %d\n", 8*WORD_SZB);
-    fprintf (f, "#define LOG_BITS_PER_WORD  %d\n", log2(8*WORD_SZB));
-    fprintf (f, "#define LOG_BYTES_PER_WORD %d\n", log2(WORD_SZB));
+    fprintf (f, "#define LOG_BITS_PER_WORD  %d\n", sml_log2(8*WORD_SZB));
+    fprintf (f, "#define LOG_BYTES_PER_WORD %d\n", sml_log2(WORD_SZB));
     fprintf (f, "\n");
 
     U.bytes[0] = 0x01;
Only in /Users/michael/sml/base/runtime/config: gen-sizes.c.orig
